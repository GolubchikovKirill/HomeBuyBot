import asyncio
import sqlite3
from database import Database, init_db


async def test_database():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–±–æ—Ç—É —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º
    await init_db()

    # –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    user_id = 999999
    await Database.add_user(user_id, "test", "–¢–µ—Å—Ç")
    print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω")

    # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫
    list_id = await Database.get_or_create_list(user_id)
    print(f"‚úÖ –°–ø–∏—Å–æ–∫ —Å–æ–∑–¥–∞–Ω: {list_id}")

    # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã
    await Database.add_product(list_id, "–¢–µ—Å—Ç–æ–≤—ã–π —Ö–ª–µ–±", "1 –±—É—Ö–∞–Ω–∫–∞")
    await Database.add_product(list_id, "–¢–µ—Å—Ç–æ–≤–æ–µ –º–æ–ª–æ–∫–æ", "1 –ª–∏—Ç—Ä")
    print("‚úÖ –ü—Ä–æ–¥—É–∫—Ç—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã
    products = await Database.get_products(list_id)
    print(f"üìã –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤: {len(products)}")

    for p in products:
        print(f"  ‚Ä¢ {p['name']} ({p['quantity']}) - –∫—É–ø–µ–Ω: {p['is_bought']}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ SQLite –Ω–∞–ø—Ä—è–º—É—é
    conn = sqlite3.connect('shopping.db')
    cursor = conn.cursor()
    cursor.execute('SELECT COUNT(*) FROM products')
    count = cursor.fetchone()[0]
    print(f"üìä –ü—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ –±–∞–∑–µ (SQLite): {count}")
    conn.close()


if __name__ == "__main__":
    asyncio.run(test_database())
